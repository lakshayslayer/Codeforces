#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define  FOR(i,n) for(long long i = 0; i < (n); i++)
#define pb push_back
#define w(x) 	ll x; cin>>x; while(x--)

#define max2(a,b) ((a<b)?b:a)
#define max3(a,b,c) max2(max2(a,b),c)
#define min2(a,b) ((a>b)?b:a)
#define min3(a,b,c) min2(min2(a,b),c)

#define loop(i,n) for(long long i=1;i<=n;i++)

using namespace std;
int MAX = 1e9 + 7;

int SetBit (int n, int X) { return n | (1 << X); }
int ClearBit (int n, int X) { return n & ~(1 << X); }
int ToggleBit (int n, int X) { return n ^ (1 << X); }
bool CheckBit (int n, int X) { return (bool)(n & (1 << X)); }


void pa(int arr[], int size)
{
   for (int i = 0; i < size; i++)
   cout << arr[i] << " ";
   cout << endl;
}

unsigned kk(unsigned int number){
  return (int)log2(number)+1;
}



int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin>>t;
	while(t--){
		ll ans1=0,ans2=0;
		ll n,m,k;
		cin>>n>>m>>k;     ll cnt2=0;  ll CNT2=0;
		ll sum1=0,sum2=0;
		ll a[k];
		FOR(i,k){
			cin>>a[i];
		}
		ll a1[k],a2[k];
		FOR(i,k){
			a1[i]=a[i]/n;
			a2[i]=a[i]/m;
			if(a1[i]==1) a1[i]=0;
			if(a2[i]==1) a2[i]=0;
			sum1+=a1[i];
			sum2+=a2[i];
			if(a1[i]==2  || a1[i]==0) cnt2++;
			if(a2[i]==2  || a2[i]==0) CNT2++;
		}

		if(sum1<m) ans1=0;
		else{
			if(cnt2==k){
				if(m%2==0) ans1=1;
				else ans1=0;
			}
			else ans1=1;
		}
		if(sum2<n) ans2=0;
		else{
			if(CNT2==k){
				if(n%2==0) ans2=1;
				else ans2=0;
			}
			else ans2=1;
		}


		if(ans1+ans2>0){
			cout<<"Yes"<<endl;
		}
		else{
			cout<<"No"<<endl;
		}

		


	}
	return 0;
}
